{
  "version": "1013000",
  "info": {
    "hostAppName": "Splice Standalone",
    "hostAppVersion": "1.0"
  },
  "nodes": [
    {
      "name": "DGNode",
      "dependencies": {},
      "bindings": [
        {
          "operator": {
            "name": "bulletOp",
            "entry": "bulletOp",
            "filename": "bulletOp.kl",
            "kl": "require InlineDrawing;\nrequire BulletHelpers;\n\nfunction Init_BasicDemo(io RigidBodySimulation sim)\n{\n  sim.initPhysics();\n  sim.createGround();\n  ///create 512 (8x8x8) dynamic object\n  const Integer ARRAY_SIZE_X = 8;\n  const Integer ARRAY_SIZE_Y = 8;\n  const Integer ARRAY_SIZE_Z = 8;\n  ///scaling of the objects (0.1 = 20 centimeter boxes )\n  const Scalar SCALING = 1.0;\n  const Scalar START_POS_X = -8.0;\n  const Scalar START_POS_Y = -8.0;\n  const Scalar START_POS_Z = -3.0;\n  //create a few dynamic rigidbodies\n  // Re-using the same collision is better for memory usage and performance\n  BulletBoxShape colShape = BulletBoxShape(Vec3(SCALING*1,SCALING*1,SCALING*1));\n  // BulletCollisionShape colShape = BulletSphereShape(1.0);\n  PolygonMesh cuboidMesh(); \n  cuboidMesh.addCuboid(Xfo(), 1 * 2.0, 1 * 2.0, 1 * 2.0);\n  cuboidMesh.recomputePointNormals(0.2);\n  /// Create Dynamic Objects\n  Scalar start_x = START_POS_X - Scalar(ARRAY_SIZE_X)/2.0;\n  Scalar start_y = START_POS_Y;\n  Scalar start_z = START_POS_Z - Scalar(ARRAY_SIZE_Z)/2.0;\n  for(Integer k=0; k<ARRAY_SIZE_Y; k++){\n    for(Integer i=0; i<ARRAY_SIZE_X; i++){\n      for(Integer j=0; j<ARRAY_SIZE_Z; j++){\n        Xfo xfo(Vec3(Scalar(2.0 * i + start_x), Scalar(20+2.0 * k + start_y), Scalar(2.0 * j + start_z)));\n        sim.addRigidBody(1.0, xfo, colShape, cuboidMesh);\n      }\n    }\n  }\n  sim.setupDebugDrawing();\n}\n\noperator bulletOp(io DrawingHandle handle, io RigidBodySimulation sim, in Scalar time, in Scalar gravity)\n{\n  if(!sim.initialized){\n    Init_BasicDemo(sim);\n  }\n  \n  if(time <= 1.0){\n    sim.resetSimulation();\n    sim.dynamicsWorld.setGravity(Vec3(0,-gravity,0));\n  }\n  else{\n    sim.stepSimulation();\n  }\n}\n",
            "portmap": {}
          }
        }
      ]
    }
  ],
  "extensions": [
    "Bullet",
    "BulletHelpers"
  ],
  "ports": [
    {
      "name": "gravity",
      "node": "DGNode",
      "graph": "bullet",
      "type": "Scalar",
      "autoInitObjects": true,
      "member": "gravity",
      "mode": "io",
      "options": {
        "uiMax": 25,
        "uiMin": 0.001
      },
      "persistence": true,
      "default": "10"
    },
    {
      "name": "handle",
      "node": "DGNode",
      "graph": "bullet",
      "type": "DrawingHandle",
      "autoInitObjects": true,
      "member": "handle",
      "mode": "io",
      "persistence": false
    },
    {
      "name": "sim",
      "node": "DGNode",
      "graph": "bullet",
      "type": "RigidBodySimulation",
      "autoInitObjects": true,
      "member": "sim",
      "mode": "io",
      "persistence": false
    },
    {
      "name": "time",
      "node": "DGNode",
      "graph": "bullet",
      "type": "Scalar",
      "autoInitObjects": true,
      "member": "time",
      "mode": "in",
      "persistence": false
    }
  ]
}